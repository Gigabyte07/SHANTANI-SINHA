/*Maze Solving Robot using Right Hand rule
Creator- SHANTANI SINHA*/


char directions[30]; // Define Array for direction decisions
#include<LiquidCrystal.h>
LiquidCrystal lcd(2,3,4,5,6,7);

int rm1 = 24;
int rm2 = 25;
int lm1 = 0;
int lm2 = 1;

int l,c1,c2,c3,r;
int i = 0;
int tdelay = 800;
int fdelay = 30;
int udelay = 1300;

void Stop()
{
 digitalWrite(lm1,0);
 digitalWrite(lm2,0);
 digitalWrite(rm1,0);
 digitalWrite(rm2,0);
}

void Forward()
{
 digitalWrite(lm1,1);
 digitalWrite(lm2,0);
 digitalWrite(rm1,1);
 digitalWrite(rm2,0);
}

void Backward()
{
 digitalWrite(lm1,0);
 digitalWrite(lm2,1);
 digitalWrite(rm1,0);
 digitalWrite(rm2,1);
}

void Left()
{
 digitalWrite(lm1,0);
 digitalWrite(lm2,1);
 digitalWrite(rm1,1);
 digitalWrite(rm2,0);
}

void Right()
{
 digitalWrite(lm1,1);
 digitalWrite(lm2,0);
 digitalWrite(rm1,0);
 digitalWrite(rm2,1);
}

void SmallLeft()
{
 digitalWrite(lm1,0);
 digitalWrite(lm2,0);
 digitalWrite(rm1,1);
 digitalWrite(rm2,0);
}

void SmallRight()
{
 digitalWrite(lm1,1);
 digitalWrite(lm2,0);
 digitalWrite(rm1,0);
 digitalWrite(rm2,0);
}

int eosens()
{
 readsens();
 if(((c1+c2+c3) == 1)||((c1+c2+c3) == 2))
 return 1;
 else
 return 0;                 
}

void readsens() //reading the sensor values
{
  l = digitalRead(26);
  c1 = digitalRead(27);
  c2 = digitalRead(28);
  c3 = digitalRead(29);
  r = digitalRead(30);

  lcd.print(l);
  lcd.print(" ");
  lcd.print(c1);
  lcd.print(" ");  
  lcd.print(c2);
  lcd.print(" ");
  lcd.print(c3);
  lcd.print(" ");
  lcd.print(r);
  lcd.print(" ");
}

void inch()
{
  lcd.print("Inch Function");
  Stop();
  delay(100);
  Forward();
  delay(500);
  Stop();
  delay(100);
  readsens();
  lcd.clear();
}

void align()
{
  lcd.print("Aligning");
  Stop();
  delay(100);
  Forward();
  delay(80);
  Stop();
  delay(100);
  lcd.clear();
  readsens();
}

void printing(char prtdirection[])
{
  lcd.clear();
  for(i=0;prtdirection[i]!='E';i++)
  {
    lcd.print(prtdirection[i]);
  }
  delay(2000);
}
void setup() {

 lcd.begin(16,2);
 lcd.print("MSR with RHR");
 delay(500);
 lcd.clear();

  pinMode(lm1,OUTPUT);
  pinMode(lm2,OUTPUT);
  pinMode(rm1,OUTPUT);
  pinMode(rm2,OUTPUT);
  pinMode(26,INPUT);
  pinMode(27,INPUT);
  pinMode(28,INPUT);
  pinMode(29,INPUT);
  pinMode(30,INPUT);
}

void loop() {
lcd.clear();
readsens();
lcd.clear();

if((l == 1) && (c1 == 1) && (c2 == 0) && (c3 == 1) && (r == 1))
{
  lcd.print("Forward");
  Forward();
}

else if(((l == 1) && (c1 == 0) && (c2 == 1) && (c3 == 1) && (r == 1)) || ((l == 1) && (c1 == 0) && (c2 == 0) && (c3 == 1) && (r == 1)) || ((l == 0) && (c1 == 1) && (c2 == 1) && (c3 == 1) && (r == 1)))
{
  lcd.print("Left");
  SmallLeft();
}

else if(((l == 1) && (c1 == 1) && (c2 == 1) && (c3 == 0) && (r == 1)) || ((l == 1) && (c1 == 1) && (c2 == 0) && (c3 == 0) && (r == 1)) || ((l == 1) && (c1 == 1) && (c2 == 1) && (c3 == 1) && (r == 0)))
{
  lcd.print("Right");
  SmallRight();
}

else if((l == 1) && (c1 == 1) && (c2 == 1) && (c3 == 1) && (r == 1))
{
  lcd.print("U Turn");
  Right();
  delay(udelay);
  directions[i]='U';
  i++;
}

else if((l == 0) && (c1 == 0) || (c3 == 0) && (r == 0))
{
 align();
 
 if(((l == 1) && (c1 == 1) && (c2 == 0) && (c3 == 0) && (r == 0)) || ((l == 1) && (c1 == 0) && (c2 == 0) && (c3 == 0) && (r == 0)) || ((l == 1) && (c1 == 1) && (c2 == 1) && (c3 == 0) && (r == 0))) 
 {
  lcd.print("RT/Strt n rt?");
  inch();
  if(((l == 1) && (c1 == 1) && (c2 == 1) && (c3 == 1) && (r == 1)))
  {
    lcd.print("Right");
    Right();
    delay(tdelay);
  }
  else if((l == 1) && (r == 1) && (eosens()))
  {
    lcd.print("Right");
    directions[i]='R';
    i++;
    Right();
    delay(tdelay);
  }
 }

else if(((l == 0) && (c1 == 0) && (c2 == 0) && (c3 == 1) && (r == 1)) || ((l == 0) && (c1 == 0) && (c2 == 0) && (c3 == 0) && (r == 1)) || ((l == 0) && (c1 == 0) && (c2 == 1) && (c3 == 1) && (r == 1))) 
{
  lcd.print("Lft/Srt n lft?");
  inch();
  if((l == 1) && (c1 == 1) && (c2 == 1) && (c3 == 1) && (r == 1))
  {
    lcd.print("Left");
    Left();
    delay(tdelay);
  }
  else if((l == 1) && (r == 1) && (eosens()))
  {
    lcd.print("Straight");
    directions[i]='S';
    i++;
    Forward();
    delay(fdelay);
  }
}

else if((l == 0) && (c1 == 0) && (c2 == 0) && (c3 == 0) && (r == 0))
{
  lcd.print("T/END/4");
  inch();
  if((l == 1) && (r == 1) && (eosens()))
  {
  lcd.print("4 Way");
  directions[i]='R';
  i++;
  Right();
  delay(tdelay);
  }
  else if((l == 1) && (c1 == 1) && (c2 == 1) && (c3 == 1) && (r == 1))
  {
    lcd.print("T-int");
    directions[i]='R';
    i++;
    Right();
    delay(tdelay);
  }
  else if((l == 0) && (c1 == 0) && (c2 == 0) && (c3 == 0) && (r == 0))
  {
    lcd.print("End of Maze");
    directions[i]='E';
    printing(directions);

    while(1)
    {
      Stop();
    }
    
  } 
}
}
}
